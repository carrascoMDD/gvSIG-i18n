<tal:block replace="nothing">
# File: TRAProcessControl_Async.pt
#
# Copyright (c) 2008, 2009, 2010, 2011  by Conselleria de Infraestructuras y Transporte de la Generalidad Valenciana
#
# GNU General Public License (GPL)
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
# 02110-1301, USA.
#
# Authors: 
# Conselleria de Infraestructuras y Transporte de la Generalidad Valenciana 
# Model Driven Development sl  Valencia (Spain) www.ModelDD.org 
# Antonio Carrasco Valero                       carrasco@ModelDD.org
#
#
</tal:block>
   
<tal:block tal:define="
    pExecutionRecord python: here.TRAgvSIGi18n_tool.fStartExecution( here, 'template', 'TRAProcessControl_Async.pt', None, True, { 'log_what': 'details', 'log_when': True, });
    pPermissionsCache python: {};
    pRolesCache python: {}"><tal:block 
    tal:define="
        pServiceResult python: here.TRAgvSIGi18n_tool.fService_ProcessControl( 
			theContextualElement     =here, 
            theProcessControlAction  =here.TRAgvSIGi18n_tool.fHTTPRequest_get( here, 'theProcessControlAction',  ''),
            thePermissionsCache      =pPermissionsCache,
            theRolesCache            =pRolesCache,
            theParentExecutionRecord =pExecutionRecord);
        unServiceSuccess                python:  ( pServiceResult or {}).get( 'success', False);
        theRootCatalogPath              python:  here.TRAgvSIGi18n_tool.fAsUnicode( here, pServiceResult.get( 'translations_catalog_root_path', u''));
        theProgressElementUID           python:  here.TRAgvSIGi18n_tool.fAsUnicode( here, pServiceResult.get( 'progress_element_UID', u''));"
>
<br/>cid_AsyncResponse_success&ensp;
<span id="cid_AsyncResponse_success"                        tal:content="python: (unServiceSuccess and 'true') or 'false'" />
<br/>cid_AsyncResponse_theRootCatalogPath&ensp;
<span id="cid_AsyncResponse_theRootCatalogPath"             tal:content="theRootCatalogPath" />
<br/>cid_AsyncResponse_theProgressElementUID&ensp;
<span id="cid_AsyncResponse_theProgressElementUID"          tal:content="theProgressElementUID" />
<tal:block tal:define="dummy python: pExecutionRecord and here.TRAgvSIGi18n_tool.pEndExecution( here, pExecutionRecord)" />
</tal:block>
</tal:block>


    
           
 