<tal:block replace="nothing">
# File: TRAContenidoXML_i18n_view.pt
#
# Copyright (c) 2008, 2009, 2010, 2011  by Conselleria de Infraestructuras y Transporte de la Generalidad Valenciana
#
# GNU General Public License (GPL)
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
# 02110-1301, USA.
#
# Authors: 
# Conselleria de Infraestructuras y Transporte de la Generalidad Valenciana 
# Model Driven Development sl  Valencia (Spain) www.ModelDD.org 
# Antonio Carrasco Valero                       carrasco@ModelDD.org
#
</tal:block>

<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"
      lang="en">
<body>


    <div metal:define-macro="tInformeContenidoXML_i18n" >
    
        <tal:block tal:replace="nothing">
        # ###############################################
        """Visual rendering component for a table of a contents result (i.e. summary for all the contents in an import, or for each of the contents.
        
        """
        </tal:block>

        <tal:block tal:define="        
            pParentExecutionRecord  pExecutionRecord | nothing;
            pExecutionRecord python: here.TRAgvSIGi18n_tool.fStartExecution( here, 'template', 'TRAContenidoXML_i18n_view.pt', pParentExecutionRecord, False)" >
    
                
            <tal:block tal:define="pInformeImportXML pInformeImportXML | nothing"
                tal:condition="pInformeImportXML" >
                <br/>
                <br/>
                <p>
                    <font size="2">
                        <strong tal:content="python: here.TRAgvSIGi18n_tool.fTranslateI18N( here, 'gvSIGi18n', 'gvSIGi18n_InformeXMLContent_msgid', 'XML content report-' )" />
                    </font>
                </p>
                
				
				<br/>
				<tal:block tal:condition="python: pInformeImportXML.get( 'fecha_informe', '')">
					<font size="2">
						<strong>
							<span tal:content="python: here.TRAgvSIGi18n_tool.fTranslateI18N( here, 'gvSIGi18n', 'gvSIGi18n_FechaInforme_label', 'Report date and time-' )"/>
							<span tal:content="python: str( pInformeImportXML.get( 'fecha_informe', ''))" />
						</strong>
					</font>
					<br/>
				</tal:block>
				
				<tal:block tal:condition="python: pInformeImportXML.get( 'start_date', '')">
					<font size="1">
						<strong>
							<span tal:content="python: here.TRAgvSIGi18n_tool.fTranslateI18N( here, 'gvSIGi18n', 'gvSIGi18n_FechaComienzo_label', 'Start date and time-' )"/>
							<span tal:content="python: str( pInformeImportXML.get( 'start_date', ''))" />
						</strong>
					</font>
					<br/>
				</tal:block>
	
				<tal:block tal:condition="python: pInformeImportXML.get( 'end_date', '')">
					<font size="1">
						<strong>
							<span tal:content="python: here.TRAgvSIGi18n_tool.fTranslateI18N( here, 'gvSIGi18n', 'gvSIGi18n_FechaFin_label', 'End date and time-' )"/>
							<span tal:content="python: str( pInformeImportXML.get(  'end_date', ''))" />
						</strong>
					</font>
					<br/>
				</tal:block>
				
				
			
			
				<tal:block tal:define="
					pTotalNumNodes python: pInformeImportXML.get( 'expected_num_nodes', {});
					pNumNodesByType python: pInformeImportXML.get( 'expected_num_nodes_by_type', {})" >
				
					<tal:block tal:condition="not: pNumNodesByType" >
						<p>
							<font size="2" color="red" >
								<strong tal:content="python: here.TRAgvSIGi18n_tool.fTranslateI18N( here, 'gvSIGi18n', 'gvSIGi18n_InformeImportXML_NoNodesInXML_msgid', 'No Nodes in XML-' )" />
							</font>
						</p>
						<br/>
						<br/>
					</tal:block>

					<tal:block tal:condition="pNumNodesByType" >
					
						<table tal:define="pNodeTypeNames python: pNumNodesByType.keys();
							unasClasesFilas python: [ 'odd', 'even', ];
							global unIndexClassFila python: 0" 
							class="listing" summary="XMLContentsReport_NodesByType" id="XML Contents Report: Number of Nodes By Type">
							<thead>
								<tr>
									<th class="sortable" align="left">
										<strong><span tal:content="python: here.TRAgvSIGi18n_tool.fTranslateI18N( here, 'gvSIGi18n', 'gvSIGi18n_XMLContentsReport_NodeName_Column_label', 'Node name-' )"/></strong>
									</th>
									<th class="sortable" align="right">
										 <strong><span tal:content="python: here.TRAgvSIGi18n_tool.fTranslateI18N( here, 'gvSIGi18n', 'gvSIGi18n_XMLContentsReport_NumberOfNodes_Column_label', '# nodes-' )"/></strong>
									</th>
								</tr>
							</thead>
							<tbody>  
								<tr class="#" tal:attributes="class python: unasClasesFilas[unIndexClassFila % 2]" >
									<td  align="left"  valign="baseline" 
										tal:content="python: '_%s' % here.TRAgvSIGi18n_tool.fTranslateI18N( here, 'gvSIGi18n', 'gvSIGi18n_Total_Row_label', 'Total-' )"/>
									<td align="right" valign="baseline" 
										tal:content="python: '%d' % pTotalNumNodes" />
									<tal:block tal:define="global unIndexClassFila python: unIndexClassFila  + 1" />                            
								</tr>
								
								<tr tal:repeat="pNodeTypeName pNodeTypeNames"
									class="#" tal:attributes="class python: unasClasesFilas[unIndexClassFila % 2]">
									<td  align="left"  valign="baseline" 
										tal:content="pNodeTypeName"/>
									<td align="right" valign="baseline" 
										tal:content="python: '%d' % pNumNodesByType.get( pNodeTypeName, 0)" />
									<tal:block tal:define="global unIndexClassFila python: unIndexClassFila  + 1" />                            
								</tr>
							</tbody>
					   </table>
					</tal:block>											
					<br/>
				</tal:block>											
					
					
				<tal:block tal:define="pBinaryFileNames python: pInformeImportXML.get( 'binary_file_names', [])" >
				
					<tal:block tal:condition="not: pBinaryFileNames" >
						<p>
							<font size="1" >
								<strong tal:content="python: here.TRAgvSIGi18n_tool.fTranslateI18N( here, 'gvSIGi18n', 'gvSIGi18n_InformeImportXML_NoBinaryFileNames_msgid', 'No Binary File Names-' )" />
							</font>
						</p>
						<br/>
						<br/>
					</tal:block>

					<tal:block tal:condition="pBinaryFileNames" >
					
						<table 
							tal:define="
								unasClasesFilas python: [ 'odd', 'even', ];
								global unIndexClassFila python: 0"
							class="listing" summary="XMLContentsReport_NodesByType" id="XMLContents Report: Number of Nodes By Type"
							>
							<thead>
								<tr>
									<th class="sortable" align="left">
										<strong><span tal:content="python: here.TRAgvSIGi18n_tool.fTranslateI18N( here, 'gvSIGi18n', 'gvSIGi18n_XMLContentsReport_BinaryFileNames_Column_label', 'Binary File names-' )"/></strong>
									</th>
							</thead>
							<tbody>                       
								<tr tal:repeat="pBinaryFileName pBinaryFileNames"
									class="#" tal:attributes="class python: unasClasesFilas[unIndexClassFila % 2]">
									<td  align="left"  valign="baseline" 
										tal:content="pBinaryFileName"/>
									<tal:block tal:define="global unIndexClassFila python: unIndexClassFila  + 1" />                            
								</tr>
							</tbody>
					   </table>
					   <br/>
					</tal:block>
			        <br/>
				</tal:block>
    
			</tal:block>                         
                
            
            <tal:block tal:define="dummy python: pExecutionRecord and here.TRAgvSIGi18n_tool.pEndExecution( here, pExecutionRecord)" />

        </tal:block>
        
    </div>        
 
</body>
</html>
