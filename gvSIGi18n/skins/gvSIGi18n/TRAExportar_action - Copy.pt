<tal:block replace="nothing">
# File: TRAExportar_action.pt
#
# Copyright (c) 2008, 2009 by Conselleria de Infraestructuras y Transporte de la
# Generalidad Valenciana
#
# GNU General Public License (GPL)
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
# 02110-1301, USA.
#
# Authors: 
# Conselleria de Infraestructuras y Transporte de la Generalidad Valenciana 
# Model Driven Development sl  Valencia (Spain) www.ModelDD.org 
# Antonio Carrasco Valero                       carrasco@ModelDD.org
#
</tal:block>
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"
      lang="en"
      metal:use-macro="here/main_template/macros/master"
      i18n:domain="plone">
<body>                     
<metal:main fill-slot="main">
    <tal:main-macro metal:define-macro="main"
        tal:define="text string:Catalogo de cadenas y sus traduciones a varios idiomas.
        global pStartTime       pStartTime | python: here.ModelDDvlPlone_tool.fMillisecondsNow()" 
        i18n:domain="gvSIGi18n">

        <metal:block metal:use-macro="here/TRAProfileExecution/macros/tSetupProfileExecution" />   


        <tal:block tal:define="pExecutionRecord python: here.fStartExecution( 'template', 'TRAExportar_action.pt', None, pAllowRootProfileExecution, { 'log_when': True, })" >
    
            <div metal:use-macro="here/document_actions/macros/document_actions">
                Document actions (print, sendto etc)
            </div>
    
            <h1 tal:content="object_title" class="documentFirstHeading">
              Title or id
            </h1>
    
            <div metal:use-macro="here/document_byline/macros/byline">
              Get the byline - contains details about author and modification date.
            </div>
            
            
            <tal:block tal:condition="python: not here.fAllowWrite()" >
                <div class="portalMessage" >
                    <span tal:content="python: here.ModelDDvlPlone_tool.fTranslateI18N( here, 'gvSIGi18n', 'gvSIGi18n_TranslationsCatalogIsLockedAgainstModifications', 'The Translations Catalog Is Locked Against Modifications')" />
                </div>
            </tal:block>
            
            <tal:block tal:define="pPermiteEditar python: False; pPermiteEliminar python: False; pShowOrHideTrees python: False">
                <metal:block metal:use-macro="here/TRACabeceraEnTabla_i18n_view/macros/tCabeceraEnTabla_i18n" />   
            </tal:block>
              
    
            <tal:block tal:define="
                pPermissionsCache python: {};
                pRolesCache python: {};
                pInformeIdiomasYModulos python: here.fInformeTitulosIdiomasYModulosPermitidos( 
                    'Export', 
                    thePermissionsCache         =pPermissionsCache, 
                    theRolesCache               =pRolesCache, 
                    theParentExecutionRecord    =pExecutionRecord)" >
                <tal:block tal:condition="not: pInformeIdiomasYModulos/success" >
                    <p tal:content="python: here.fTranslateI18N( 'gvSIGi18n', 'gvSIGi18n_AccessFailedAndPromptYouHavePermission_label', 'Access to the translations catalog failed.\nDo you have permission ?\nIf so, you may want to login first.-')" />
                </tal:block>
                <tal:block tal:condition="pInformeIdiomasYModulos/success" >
                    <tal:block tal:define="
                        pInformesIdiomas pInformeIdiomasYModulos/idiomas;
                        pInformesModulos pInformeIdiomasYModulos/modulos;
                        pCodigosIdioma                          python: [ unInformeIdioma.get( 'codigoIdiomaEnGvSIG', '') for unInformeIdioma in pInformesIdiomas];
                        pNombresModulos                         python: pInformesModulos;
                        pCodigosIdiomaSeleccionados             python: [ ];
                        pCodigosIdiomaReferencia                python: { };
                        pCodificacionesCaracteres               python: { };
                        pNombresModulosSeleccionados            python: [ ];
                        pIncluirModuloNoEspecificado            python: False" >
        
                        <tal:block tal:repeat="pCodigoIdioma pCodigosIdioma">
                            <tal:block tal:define="pParametroSeleccionIdioma python: request.get( 'lan-%s' % pCodigoIdioma, '')"
                                tal:condition="python: pParametroSeleccionIdioma == 'on'">
                                <tal:block tal:define="dummy python: pCodigosIdiomaSeleccionados.append( pCodigoIdioma)" />
                            </tal:block>
                        </tal:block>
                    
                        <tal:block tal:repeat="pCodigoIdioma pCodigosIdioma">
                            <tal:block tal:define="pParametroIdiomaReferencia python: request.get( 'ref-%s' % pCodigoIdioma, '')"
                                tal:condition="python: pParametroIdiomaReferencia">
                                <tal:block tal:define="dummy python: pCodigosIdiomaReferencia.update( { pCodigoIdioma : pParametroIdiomaReferencia, })" />
                            </tal:block>
                        </tal:block>
                    
                        <tal:block tal:repeat="pCodigoIdioma pCodigosIdioma">
                            <tal:block tal:define="pParametroCodificacionCaracteres python: request.get( 'encoding-%s' % pCodigoIdioma, '')"
                                tal:condition="python: pParametroCodificacionCaracteres">
                                <tal:block tal:define="dummy python: pCodificacionesCaracteres.update( { pCodigoIdioma : pParametroCodificacionCaracteres, })" />
                            </tal:block>
                        </tal:block>
                    
                       <tal:block tal:repeat="pNombreModulo pNombresModulos">
                            <tal:block tal:define="pParametroSeleccionModulo python: request.get( 'mod-%s' % pNombreModulo, '')"
                                tal:condition="python: pParametroSeleccionModulo == 'on'">
                                <tal:block tal:define="dummy python: pNombresModulosSeleccionados.append( pNombreModulo)" />
                            </tal:block>
                        </tal:block>
                        <tal:block tal:define="pParametroSeleccionModulo python: request.get( 'mod-ModuloNoEspecificado', '')"
                            tal:condition="python: pParametroSeleccionModulo == 'on'">
                            <tal:block tal:define="global pIncluirModuloNoEspecificado python: True" />
                        </tal:block>
                       
                       <p>pCodigosIdiomaSeleccionados</p>
                       <p tal:content="python: str( pCodigosIdiomaSeleccionados)" />
                       <br/>
                       <p>pCodigosIdiomaReferencia</p>
                       <p tal:content="python: str( pCodigosIdiomaReferencia)" />
                       <br/>
                       <p tal:content="python: 'pIncluirModuloNoEspecificado %s' % str( pIncluirModuloNoEspecificado)" />
                       <br/>
                       <p>pNombresModulosSeleccionados</p>
                       <p tal:content="python: str( pNombresModulosSeleccionados)" />
                   
                       <tal:block tal:define="unResultadoExportar python: here.fExportarTraducciones( False, pCodigosIdiomaSeleccionados, pCodigosIdiomaReferencia, pCodificacionesCaracteres, pIncluirModuloNoEspecificado, pNombresModulosSeleccionados, request.get( 'theExportFormat', 'Java .properties'), request.get( 'theIncludeManifest', ''), request.get( 'theSeparatedModules', ''), request.get( 'theTipoArchivo', ''))" >
                           <tal:block tal:condition="unResultadoExportar" >
                               <tal:block tal:define="dummy python: None and request.response.redirect( '%s/TRAExportar/' % here.absolute_url())" />
                           </tal:block>
                           <tal:block tal:condition="not: unResultadoExportar" >
                               <p><strong  tal:content="python: here.fTranslateI18N( 'gvSIGi18n', 'gvSIGi18n_TRAExportacion_ErrorEnExportacion_msgid',  'No ha sido posible realizar la exportacion.-' )" /></p>
                           </tal:block>
                       </tal:block>
                    </tal:block>
                </tal:block>
            </tal:block>
            
            
            <tal:block tal:define="dummy python: pExecutionRecord and here.pEndExecution( pExecutionRecord)" />
            
            <metal:block metal:use-macro="here/TRAFooter_i18n_view/macros/tFooter_i18n" />
    
    
            <tal:block tal:replace="structure python: pExecutionRecord and here.TRARenderExecutionDetails( pExecutionRecord)" />
     
            
            <tal:block replace="nothing">
                <tal:block tal:define="dummy python:request.response.redirect( '%s/Tabular/' % here.absolute_url())" />
            </tal:block>
        
        </tal:block>

    </tal:main-macro>
</metal:main>

</body>
</html>













